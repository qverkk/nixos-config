From 1f7d426eec1c5490b9dcc644e1ff15e15880ab42 Mon Sep 17 00:00:00 2001
From: qverkk <membersy@gmail.com>
Date: Sun, 18 Jun 2023 10:40:09 +0200
Subject: [PATCH] Add problems directory slug config option

---
 src/cfg.rs       |  1 +
 src/cmds/edit.rs |  1 +
 src/helper.rs    | 39 ++++++++++++++++++++++++++++-----------
 3 files changed, 30 insertions(+), 11 deletions(-)

diff --git a/src/cfg.rs b/src/cfg.rs
index ba57d59..02dce46 100644
--- a/src/cfg.rs
+++ b/src/cfg.rs
@@ -142,6 +142,7 @@ pub struct Code {
 #[derive(Clone, Debug, Deserialize, Serialize)]
 pub struct Storage {
     cache: String,
+    pub directory_slug: bool,
     code: String,
     root: String,
     scripts: Option<String>,
diff --git a/src/cmds/edit.rs b/src/cmds/edit.rs
index 21285fb..370dd9b 100644
--- a/src/cmds/edit.rs
+++ b/src/cmds/edit.rs
@@ -75,6 +75,7 @@ impl Command for EditCommand {
 
             let question: Question = qr?;
 
+            let _result = std::fs::create_dir(Path::new(&path).parent().unwrap());
             let mut file_code = File::create(&path)?;
             let mut file_tests = File::create(&tests_path)?;
 
diff --git a/src/helper.rs b/src/helper.rs
index 5d8d746..22670bc 100644
--- a/src/helper.rs
+++ b/src/helper.rs
@@ -283,11 +283,17 @@ mod file {
     pub fn test_cases_path(target: &Problem) -> Result<String, crate::Error> {
         let conf = crate::cfg::locate()?;
 
-        let mut path = format!(
-            "{}/{}.tests.dat",
-            conf.storage.code()?,
-            conf.code.pick,
-        );
+        let mut path;
+        if conf.storage.directory_slug {
+            path = format!(
+                "{}/{}/{}.tests.dat",
+                conf.storage.code()?,
+                "${slug}",
+                conf.code.pick
+            );
+        } else {
+            path = format!("{}/{}.tests.dat", conf.storage.code()?, conf.code.pick);
+        }
 
         path = path.replace("${fid}", &target.fid.to_string());
         path = path.replace("${slug}", &target.slug.to_string());
@@ -303,12 +309,23 @@ mod file {
             lang = l.ok_or(Error::NoneError)?;
         }
 
-        let mut path = format!(
-            "{}/{}.{}",
-            conf.storage.code()?,
-            conf.code.pick,
-            suffix(&lang)?,
-        );
+        let mut path;
+        if conf.storage.directory_slug {
+            path = format!(
+                "{}/{}/{}.{}",
+                conf.storage.code()?,
+                "${slug}",
+                conf.code.pick,
+                suffix(&lang)?,
+            );
+        } else {
+            path = format!(
+                "{}/{}.{}",
+                conf.storage.code()?,
+                conf.code.pick,
+                suffix(&lang)?,
+            );
+        }
 
         path = path.replace("${fid}", &target.fid.to_string());
         path = path.replace("${slug}", &target.slug.to_string());
